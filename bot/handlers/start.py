from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import ContextTypes, CommandHandler, CallbackQueryHandler, MessageHandler, filters
from bot.database import db_manager, User
from bot.api_client import api_client
from bot.config import config
from bot.utils.tracking import track_referral
import logging
import re

logger = logging.getLogger(__name__)


async def start_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """Handle /start command"""
    user = update.effective_user
    args = context.args

    # Check for referral code
    referral_code = None
    if args:
        referral_code = args[0]

    # Get or create user in bot database
    db_user = await db_manager.get_user(user.id)

    if not db_user:
        # New user registration
        db_user = await db_manager.create_user(
            telegram_id=user.id,
            username=user.username,
            first_name=user.first_name,
            last_name=user.last_name,
            registration_coins=config.DEFAULT_REGISTRATION_COINS,
            referred_by=referral_code
        )

        # Track referral
        if referral_code:
            await track_referral(referral_code, user.id)

        welcome_text = f"""üéâ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ LightweightPay Bot!

–ß—Ç–æ —É–º–µ–µ—Ç —ç—Ç–æ—Ç –±–æ—Ç:
üí∞ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –º–æ–Ω–µ—Ç–∞–º–∏ –∏ –ø–æ–¥–ø–∏—Å–∫–∞–º–∏
üìä –ü—Ä–æ—Å–º–æ—Ç—Ä —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
üîÑ –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–æ–∫—É–ø–æ–∫
üí≥ –ü–æ–∫—É–ø–∫–∞ –ø–æ–¥–ø–∏—Å–æ–∫ –∏–∑ –†–æ—Å—Å–∏–∏

–î–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã —Å–≤—è–∂–∏—Ç–µ –∞–∫–∫–∞—É–Ω—Ç —Å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ–º."""
    else:
        welcome_text = f"üëã –° –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ–º, {user.first_name}!\n\n"

        # Update balance if user is linked
        if db_user.api_token:
            try:
                balance = await api_client.get_balance(db_user.api_token)
                welcome_text += f"üí∞ –í–∞—à –±–∞–ª–∞–Ω—Å: {balance.get('balance', 0)} –º–æ–Ω–µ—Ç\n"

                if balance.get('hasActiveSubscription'):
                    expiry = balance.get('subscriptionExpiresAt', '')
                    if expiry and len(expiry) >= 10:
                        expiry = expiry[:10]
                        welcome_text += f"üìÖ –ü–æ–¥–ø–∏—Å–∫–∞ –¥–æ: {expiry}\n"
            except Exception as e:
                logger.error(f"Error getting balance: {e}")
                welcome_text += "–í–∞—à –±–∞–ª–∞–Ω—Å: –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è...\n"
        else:
            welcome_text += "–í–∞—à –±–∞–ª–∞–Ω—Å: –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è...\n"

    # Main menu keyboard
    keyboard = [
        [InlineKeyboardButton("üí∞ –ë–∞–ª–∞–Ω—Å", callback_data="balance"),
         InlineKeyboardButton("üí≥ –ü–æ–¥–ø–∏—Å–∫–∏", callback_data="subscriptions")],
        [InlineKeyboardButton("üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", callback_data="stats"),
         InlineKeyboardButton("üîÑ –í–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å", callback_data="restore")],
        [InlineKeyboardButton("üîó –°–≤—è–∑–∞—Ç—å –∞–∫–∫–∞—É–Ω—Ç", callback_data="link_account")],
        [InlineKeyboardButton("‚ÑπÔ∏è –ü–æ–º–æ—â—å", callback_data="help")]
    ]

    # Add admin button for admins
    if user.id in config.ADMIN_IDS:
        keyboard.append([InlineKeyboardButton("‚öôÔ∏è –ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å", callback_data="admin")])

    reply_markup = InlineKeyboardMarkup(keyboard)

    await update.message.reply_text(
        welcome_text,
        reply_markup=reply_markup
    )


async def help_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """Handle /help command"""
    help_text = """üìñ –ü–æ–º–æ—â—å –ø–æ –±–æ—Ç—É

–û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:
/start - –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
/help - –≠—Ç–∞ —Å–ø—Ä–∞–≤–∫–∞
/balance - –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –±–∞–ª–∞–Ω—Å
/subscribe - –ö—É–ø–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É
/stats - –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è

–ö–∞–∫ —Å–≤—è–∑–∞—Ç—å –∞–∫–∫–∞—É–Ω—Ç:
1. –ù–∞–∂–º–∏—Ç–µ "üîó –°–≤—è–∑–∞—Ç—å –∞–∫–∫–∞—É–Ω—Ç"
2. –í–≤–µ–¥–∏—Ç–µ email –æ—Ç –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
3. –í–≤–µ–¥–∏—Ç–µ –∫–æ–¥ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è

–ü–æ–∫—É–ø–∫–∞ –ø–æ–¥–ø–∏—Å–∫–∏:
1. –ù–∞–∂–º–∏—Ç–µ "üí≥ –ü–æ–¥–ø–∏—Å–∫–∏"
2. –í—ã–±–µ—Ä–∏—Ç–µ –ø–∞–∫–µ—Ç
3. –û–ø–ª–∞—Ç–∏—Ç–µ —á–µ—Ä–µ–∑ Tribute (—Ä–∞–±–æ—Ç–∞–µ—Ç –∏–∑ –†–§)

–ü—Ä–æ–±–ª–µ–º—ã?
–ù–∞–ø–∏—à–∏—Ç–µ –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É"""

    await update.message.reply_text(help_text)


# Register handlers
def register_start_handlers(application):
    application.add_handler(CommandHandler("start", start_command))
    application.add_handler(CommandHandler("help", help_command))