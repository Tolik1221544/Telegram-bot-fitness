import asyncio
import uuid
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import ContextTypes, CallbackQueryHandler
from bot.api_client import api_client
from bot.config import config
import logging

logger = logging.getLogger(__name__)

SUBSCRIPTION_PACKAGES = [
    {
        'id': '1month',
        'name': '1 –º–µ—Å—è—Ü',
        'coins': 100,
        'days': 30,
        'price': 2,
        'currency': '‚Ç¨',
        'description': '100 –º–æ–Ω–µ—Ç –Ω–∞ 30 –¥–Ω–µ–π'
    },
    {
        'id': '3months',
        'name': '3 –º–µ—Å—è—Ü–∞',
        'coins': 300,
        'days': 90,
        'price': 5,
        'currency': '‚Ç¨',
        'description': '300 –º–æ–Ω–µ—Ç –Ω–∞ 90 –¥–Ω–µ–π'
    },
    {
        'id': '6months',
        'name': '6 –º–µ—Å—è—Ü–µ–≤',
        'coins': 600,
        'days': 180,
        'price': 10,
        'currency': '‚Ç¨',
        'description': '600 –º–æ–Ω–µ—Ç –Ω–∞ 180 –¥–Ω–µ–π'
    },
    {
        'id': 'year',
        'name': '–ì–æ–¥',
        'coins': 1200,
        'days': 365,
        'price': 20,
        'currency': '‚Ç¨',
        'description': '1200 –º–æ–Ω–µ—Ç –Ω–∞ 365 –¥–Ω–µ–π'
    }
]


async def show_subscriptions(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ü–æ–∫–∞–∑–∞—Ç—å –¥–æ—Å—Ç—É–ø–Ω—ã–µ –ø–æ–¥–ø–∏—Å–∫–∏ —Å –ø—Ä—è–º–æ–π —Å—Å—ã–ª–∫–æ–π –Ω–∞ Tribute"""
    query = update.callback_query
    await query.answer()

    user = query.from_user

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø—Ä–∏–≤—è–∑–∞–ª –∞–∫–∫–∞—É–Ω—Ç
    from bot.database import db_manager
    db_user = await db_manager.get_user(user.id)

    if not db_user:
        await query.message.edit_text("‚ùå –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /start")
        return

    if not db_user.api_token:
        keyboard = [
            [InlineKeyboardButton("üîó –°–Ω–∞—á–∞–ª–∞ —Å–≤—è–∂–∏—Ç–µ –∞–∫–∫–∞—É–Ω—Ç", callback_data="link_account")],
            [InlineKeyboardButton("üîô –ù–∞–∑–∞–¥", callback_data="start")]
        ]
        await query.message.edit_text(
            "‚ùå –î–ª—è –ø–æ–∫—É–ø–∫–∏ –ø–æ–¥–ø–∏—Å–∫–∏ —Å–Ω–∞—á–∞–ª–∞ –Ω—É–∂–Ω–æ —Å–≤—è–∑–∞—Ç—å –∞–∫–∫–∞—É–Ω—Ç —Å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ–º.",
            reply_markup=InlineKeyboardMarkup(keyboard)
        )
        return

    # –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º –≤—Å–µ—Ö —Ç–∞—Ä–∏—Ñ–æ–≤
    text = """üí≥ **LightWeight PAY**

–ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ –∫—É–ø–∏—Ç—å LW coins —Å–æ —Å–∫–∏–¥–∫–æ–π, –æ–ø–ª–∞—Ç–∏—Ç—å –∫–∞—Ä—Ç–æ–π –ª—é–±–æ–π —Å—Ç—Ä–∞–Ω—ã –∏ –ª—é–±—ã–º —É–¥–æ–±–Ω—ã–º —Å–ø–æ—Å–æ–±–æ–º.

**üìã –î–æ—Å—Ç—É–ø–Ω—ã–µ —Ç–∞—Ä–∏—Ñ—ã:**

"""

    # –î–æ–±–∞–≤–ª—è–µ–º –≤—Å–µ —Ç–∞—Ä–∏—Ñ—ã —Ç–µ–∫—Å—Ç–æ–º
    for package in SUBSCRIPTION_PACKAGES:
        text += f"‚Ä¢ **{package['name']}** ‚Äî {package['price']} {package['currency']}\n"
        text += f"  ‚îî {package['coins']} –º–æ–Ω–µ—Ç –Ω–∞ {package['days']} –¥–Ω–µ–π\n\n"

    text += """**–ö–∞–∫ –∫—É–ø–∏—Ç—å:**
1Ô∏è‚É£ –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "üí≥ –û—Ç–∫—Ä—ã—Ç—å –º–∞–≥–∞–∑–∏–Ω Tribute"
2Ô∏è‚É£ –í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—ã–π –ø–µ—Ä–∏–æ–¥ –ø–æ–¥–ø–∏—Å–∫–∏
3Ô∏è‚É£ –í—ã–±–µ—Ä–∏—Ç–µ —Å–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã
4Ô∏è‚É£ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –ø–ª–∞—Ç—ë–∂

‚ö°Ô∏è –ú–æ–Ω–µ—Ç—ã –∑–∞—á–∏—Å–ª—è—Ç—Å—è **–∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏** –≤ —Ç–µ—á–µ–Ω–∏–µ 2 –º–∏–Ω—É—Ç –ø–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã!

‚úÖ –ë–µ–∑–æ–ø–∞—Å–Ω–æ –∏ —É–¥–æ–±–Ω–æ
‚úÖ –ü–æ–¥–¥–µ—Ä–∂–∫–∞ –∫–∞—Ä—Ç –ª—é–±—ã—Ö —Å—Ç—Ä–∞–Ω
‚úÖ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –Ω–∞—á–∏—Å–ª–µ–Ω–∏–µ –º–æ–Ω–µ—Ç"""

    logger.info(f"üí≥ User {user.id} opening Tribute store (no pending payment created)")

    # –ü—Ä—è–º–∞—è —Å—Å—ã–ª–∫–∞ –Ω–∞ Tribute
    payment_url = "https://t.me/tribute/app?startapp=sDlI"

    keyboard = [
        [InlineKeyboardButton("üí≥ –û—Ç–∫—Ä—ã—Ç—å –º–∞–≥–∞–∑–∏–Ω Tribute", url=payment_url)],
        [InlineKeyboardButton("üîô –ù–∞–∑–∞–¥", callback_data="start")]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)

    await query.message.edit_text(text, reply_markup=reply_markup, parse_mode='Markdown')


def register_payment_handlers(application):
    """–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è handlers"""
    application.add_handler(CallbackQueryHandler(show_subscriptions, pattern="^subscriptions$"))